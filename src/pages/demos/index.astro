---
import Layout from "../../layouts/Layout.astro";
import FabricSvgImage from "../../assets/demoImages/svgFabric/sectionimage.png"
import Image from "astro/components/Image.astro";
import TiltContainer from "../../components/Astro/PerspectiveContainers/TiltContainer.astro";

const Pages: {href: string, title: string, description: string, imageUrl: ImageMetadata, createdAt: Date, updatedAt?: Date}[] = [
	{ href: "/demos/FabricSvg", title: "Fabric SVG Filter Demo", description: "A demo of applying a fabric texture to SVG elements using filters.", imageUrl: FabricSvgImage, createdAt: new Date("07/15/2025") },
	{ href: "/demos/RainfallCanvas", title: "Rainfall Canvas", description: "Making Canvases for rainy days", imageUrl: FabricSvgImage, createdAt: new Date("07/18/2025") },
	{ href: "/demos/QuickGSAPUtils", title: "Quick Gsap Grab bag", description: "small preset code functions for basic animations", imageUrl: FabricSvgImage, createdAt: new Date("07/22/2025") },
	{ href: "/demos/3dcss", title: "3d Effect in CSS", description: "How can css transforms move your elements into the 3rd dimension", imageUrl: FabricSvgImage, createdAt: new Date("08/02/2025") },
	{ href: "/demos/SnowfallCanvas", title: "Snowfall Canvas", description: "How can css transforms move your elements into the 3rd dimension", imageUrl: FabricSvgImage, createdAt: new Date("08/02/2025") },
	
]
---

<Layout hasNavbar>	
    <div class="flex justify-center flex-wrap items-start gap-8 mx-auto">
		
		
		{Pages.map((page) => {
			return (
				<TiltContainer className="group cursor-pointer h-80 shadow-sm hover:shadow-lg transition-all bg-mute hover:border-accent rounded-lg border border-border border-solid w-full sm:w-80 aspect-[3/4] duration-300 max-w-xs ">
					<a href={page.href} class="block transform-3d h-full rgb after:rounded-lg rounded-lg bg-background hover:bg-transparent transition-colors duration-200">
						<div class="flex flex-col h-full transform-3d">
							<div class="h-48 w-full overflow-hidden rounded-t-lg cardImage">
								<Image 
								loading="eager" 
								src={page.imageUrl} 
								alt={page.title} 
								class="w-full h-full object-cover"
								/>
							</div>
							<div class="p-2 flex flex-col justify-between flex-1 transform-3d translate-z-[20px]">
								<h3 class="text-lg font-semibold transition-transform duration-300 transform-3d group-hover:translate-z-[20px] ">
								{page.title}
								</h3>
								<p class="text-sm text-muted-foreground">{page.description}</p>
								<p class="text-sm text-muted-foreground">
								<b>Planted:</b> {page.createdAt.getMonth() + 1}/{page.createdAt.getDate()}/{page.createdAt.getFullYear()}
								</p>
							</div>
						</div>
					</a>
				</TiltContainer>

			)
		})}
	</div>
</Layout>
<style>
	.cardImage {
		mask-image: linear-gradient(to top, transparent 0%, black 2%);
		-webkit-mask-image: linear-gradient(to top, transparent 0%, black 2%);
	}

	.rgb::after {
		content: "";
		background: #833AB4;
		transform: translateZ(-1px);
		filter: blur(8px);
		background: linear-gradient(
			45deg,
			rgba(131, 58, 180, 1) 0%,
			rgba(253, 29, 29, 1) 25%,
			rgba(252, 176, 69, 1) 50%,
			rgba(131, 58, 180, 1) 75%,
			rgba(253, 29, 29, 1) 100%
			) repeat 0% 0% / 300%;
			position: absolute;
			inset: 4px;
			animation: rgb 16s linear infinite;
	}

	.rgb:hover::after {
		content: "";
		inset: -4px;
	}

	@keyframes rgb {
		0% {background-position:  0% 50%;}
		50% {background-position:  100% 50%;}
		100% {background-position:  0% 50%;}
	}
</style>
<script>
	//initialize gsap
	import gsap from "gsap";
	

</script>
